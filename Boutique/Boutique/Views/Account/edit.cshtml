@model Boutique.Models.Customer
@{
    ViewBag.Title = "Chỉnh sửa thông tin";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">

}

<div id="main" class=" container d-flex flex-column flex-lg-row h-lg-full bg-surface-secondary">
    <!-- Vertical Navbar -->
    <!-- Main content -->
    @using (Html.BeginForm("edit", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="h-screen flex-grow-1 overflow-y-lg-auto">
            @{
                Html.RenderPartial("Partial_Account");
            }
            <!-- Main -->
            <main class="py-6 bg-surface-secondary">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-xl-7 mx-auto">
                            <!-- Profile picture -->
                            <div class="card shadow border-0 mt-4 mb-10">
                                <div class="card-body">
                                    <div class="d-flex align-items-center">
                                        <div>
                                            <div class="d-flex align-items-center">
                                                <a href="#" class="avatar avatar-lg bg-warning rounded-circle text-white">
                                                    @if (Model.Avatar != null)
                                                    {
                                                        <img alt="avatar" src="~/Images/customer/@Url.Content(Model.Avatar)" style="max-width:255px; max-height: 255px" />
                                                    }
                                                </a>
                                                <div class="ms-4">
                                                    <span class="h1 d-block mb-0">@Model.FullName</span>
                                                    <div id="myfileupload" class="col-md-10">
                                                        <input type="file" name="file" id="file" class="form-control" />
                                                        @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "validate" })
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                        <div class="ms-auto">
                                            <a href="@Url.Action("Index","Account")" class="text-sm font-semibold text-muted">Quay về</a>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- Form -->
                            <div class="mb-5">
                            </div>
                            <form class="mb-6">
                                <div class="row mb-5">
                                    <div class="col-md-12">
                                        <div class="">
                                            <label class="form-label" for="full_name">Full name</label>
                                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "validate" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row g-5">
                                    <div class="col-md-6">
                                        <label class="form-label" for="email">Email</label>
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "validate" })

                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label" for="phone_number">Phone number</label>
                                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "validate" })

                                    </div>
                                   
                                    <div class="col-12">
                                        <label class="form-label" for="address">Address</label>
                                        @if (Model.Address != null)
                                        {
                                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "validate" })
                                        }
                                        else
                                        {
                                            <input type="text" class="form-control" id="address" placeholder="Hãy nhập số nhà và tên đường cụ thể, vd: 19 Nguyễn Thị Minh Khai">

                                        }

                                    </div>
                                    <div class="col-md-12">
                                        <div class="row">

                                            <label class="form-label" for="country">Country</label>
                                            <div class="col-md-4">
                                                <select class="form-select form-select-sm mb-3" id="city" aria-label=".form-select-sm" name="Tinh">
                                                    <option value="" selected>Chọn tỉnh thành</option>
                                                </select>
                                            </div>
                                            <div class="col-md-4">
                                                <select class="form-select form-select-sm mb-3" id="district" aria-label=".form-select-sm" name="Quan">
                                                    <option value="" selected>Chọn quận huyện</option>
                                                </select>
                                            </div>
                                            <div class="col-md-4">
                                                <select class="form-select form-select-sm" id="ward" aria-label=".form-select-sm" name="Phuong">
                                                    <option value="" selected>Chọn phường xã</option>
                                                </select>
                                            </div>


                                        </div>
                                    </div>
                                </div>
                                <div class="text-end">
                                    <button type="submit" class="btn btn-sm btn-primary">Lưu</button>
                                </div>
                            </form>
                            <hr class="my-10" />
                            <!-- Individual switch cards -->

                        </div>
                    </div>
                </div>
            </main>
        </div>
    }
</div>



<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
<script>
    var citis = document.getElementById("city");
    var districts = document.getElementById("district");
    var wards = document.getElementById("ward");
    var Parameter = {
        url: "https://raw.githubusercontent.com/kenzouno1/DiaGioiHanhChinhVN/master/data.json",
        method: "GET",
        responseType: "application/json",
    };
    var promise = axios(Parameter);
    promise.then(function (result) {
        renderCity(result.data);
    });

    function renderCity(data) {
        for (const x of data) {
            citis.options[citis.options.length] = new Option(x.Name, x.Id);
        }
        citis.onchange = function () {
            district.length = 1;
            ward.length = 1;
            if (this.value != "") {
                const result = data.filter(n => n.Id === this.value);

                for (const k of result[0].Districts) {
                    district.options[district.options.length] = new Option(k.Name, k.Id);
                }
            }
        };
        district.onchange = function () {
            ward.length = 1;
            const dataCity = data.filter((n) => n.Id === citis.value);
            if (this.value != "") {
                const dataWards = dataCity[0].Districts.filter(n => n.Id === this.value)[0].Wards;

                for (const w of dataWards) {
                    wards.options[wards.options.length] = new Option(w.Name, w.Id);
                }
            }
        };
    }
</script>