@using Boutique.Models
@model List<Cart>

@{
    ViewBag.Title = "Giỏ hàng";
    Layout = "~/Views/Shared/cart_Layout.cshtml";
    double totalPrice = ViewBag.totalPrice;
}

<section class="h-100 h-custom" style="background-color: #838383;">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div>
                <div class="col-12">
                    <div class="card card-registration card-registration-2" style="border-radius: 15px;">
                        <div class="card-body p-0">
                            <div class="row g-0">
                                <div class="col-lg-8">
                                    <div class="p-5">
                                        <div class="d-flex justify-content-between align-items-center mb-5">
                                            <h1 class="fw-bold mb-0 text-black">Giỏ hàng</h1>
                                            <h6 class="mb-0 text-muted">@ViewBag.totalQuantity sản phẩm</h6>
                                        </div>
                                        @foreach (var item in Model)
                                        {
                                            <hr class="my-4">
                                            using (Html.BeginForm("UpdateCart", "Cart", new { @IdProduct = item.IdProduct, @IdColor = item.IdColor, @IdSize = item.IdSize }))
                                            {
                                                <div class="row mb-4 d-flex justify-content-between align-items-center">
                                                    <div class="col-md-2 col-lg-2 col-xl-2">
                                                        <img src="~/Images/sp/@Url.Content(item.Picture)"
                                                             class="img-fluid rounded-3" alt="Cotton T-shirt">
                                                    </div>
                                                    <div class="col-md-3 col-lg-3 col-xl-3">
                                                        <h6 class="text-muted">@item.Brand</h6>
                                                        <h6 class="text-black mb-0">@item.ProductName -@item.Color - @item.Size </h6>
                                                        <h6 class="text-black mb-0">@string.Format("{0:#,0}", item.unitPrice) ₫</h6>
                                                    </div>

                                                    <div class="col-md-3 col-lg-3 col-xl-2 d-flex">
                                                        <button class="btn btn-link px-2" type="submit"
                                                                onclick="this.parentNode.querySelector('input[type=number]').stepDown()">
                                                            <i class="fa fa-minus"></i>
                                                        </button>

                                                        <input id="form1" min="1" name="quantity" value="@item.Quantity" type="number"
                                                               class="form-control form-control-sm" />

                                                        <button class="btn btn-link px-2" type="submit"
                                                                onclick="this.parentNode.querySelector('input[type=number]').stepUp()">
                                                            <i class="fa fa-plus"></i>
                                                        </button>
                                                    </div>
                                                    <div class="col-md-3 col-lg-2 col-xl-2 offset-lg-1">
                                                        <h6 class="mb-0">@string.Format("{0:#,0}", item.totalPrice) ₫</h6>
                                                    </div>
                                                    <div class="col-md-1 col-lg-1 col-xl-1 text-end">
                                                        <a href="@Url.Action("deletefromCart","Cart", new { @Idproduct = item.IdProduct, @IdColor = item.IdColor, @IdSize = item.IdSize})" class="text-muted"><i class="fa fa-times"></i></a>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                                <div class="col-lg-4 bg-grey">
                                    <div class="p-5">
                                        <h3 class="fw-bold mb-5 mt-2 pt-1">Tạm tính</h3>
                                        <hr class="my-4">

                                        <div class="d-flex justify-content-between mb-4">
                                            <h5 class="text-uppercase">Sản phẩm: @ViewBag.totalQuantity</h5>
                                            <h5></h5>
                                        </div>

                                        <h5 class="text-uppercase mb-3">Mã khuyến mãi</h5>

                                        <div class="mb-5">
                                            <div class="form-outline">
                                                <input type="text" id="form3Examplea2"
                                                       class="form-control form-control-lg" />
                                                <button type="button" class="btn btn-primary mt-5" data-toggle="modal" data-target="#myModal">
                                                    Xem danh sách khuyến mãi
                                                </button>
                                            </div>

                                        </div>

                                        <hr class="my-4">

                                        <div class="d-flex justify-content-between mb-5">
                                            <h5 class="text-uppercase">Tổng tiền</h5>

                                            @if (Model.Count != 0)
                                            {<h5>@string.Format("{0:#,0}", totalPrice) ₫</h5> }
                                        else
                                        { <h5> 0₫ </h5>}


                                        </div>
                                        <button type="button" class="btn btn-light btn-block btn-lg"
                                                data-mdb-ripple-color="dark" onclick="location.href='@Url.Action("Index","Home")'">
                                            Quay về
                                        </button>
                                        <button type="button" class="btn btn-dark btn-block btn-lg"
                                                data-mdb-ripple-color="dark" onclick="checkout()">
                                            Đặt hàng
                                        </button>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<div class="modal fade" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Danh sách các khuyến mãi</h4>
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times"></i></button>
            </div>
            <div class="modal-body">
                <div class="card-deck">
                    <div class="card" id="loadData">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="submitCode" class="btn btn-primary" data-dismiss="modal">Xác nhận</button>
            </div>
        </div>
    </div>
</div>


<style>

    .form-control.form-control-sm {
        width: 50px
    }

    .card-registration .select-input.form-control[readonly]:not([disabled]) {
        font-size: 1rem;
        line-height: 2.15;
        padding-left: .75em;
        padding-right: .75em;
    }

    .card-registration .select-arrow {
        top: 13px;
    }

    .bg-grey {
        background-color: #eae8e8;
    }
</style>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


<script>
    $(document).ready(function () {
        loadData();
        $('#submitCode').click(function () {
            var selectCode = document.querySelector('input[name="program"]:checked').value;
            $('#form3Examplea2').val(selectCode);

        });
    });
    function checkout() {
        var code = document.getElementById('form3Examplea2').value;
        location.href = '/Cart/CheckOut';

        if (code != null) {
            localStorage.setItem("promo_code", code);
        }
        else {
            localStorage.removeItem("promo_code");
        }

    }
    // Read
    function loadData() {
        $.ajax({
            url: '/Cart/getPromotion',
            type: 'GET',
            success: function (res) {
                if (res.TotalItems > 0) {
                    var items = res.Data;
                    var html = "";
                    for (let i = 0; i < res.TotalItems; i++) {
                        html += "<div class='card-body'>"
                        html += "<h5 class='card-title'>" + items[i].promotion_name + "</h5>"
                        html += "<p class='card-text'>" + "Mô tả: " + items[i].description + "</p>"
                        html += "<p class='card-text'>" + "Ngày hết hạn: " + formatDate(items[i].end_date) + "</p>"
                        html += "<input class='form-check-input' type='radio' name='program' value='" + items[i].promotion_name + "' id='" + items[i].promotion_id + "' >"
                        html += "<lable class='form-check-label' for='" + items[i].promotion_id + "'> Chọn </label>"
                        html += "</div>   <hr class='mt-1mb-1'/>";
                    }
                    $('#loadData').html(html);
                }
            }
        });
    }
    function formatDate(inputDate) {
        const regex = /\/Date\((\d+)\)\//;
        const match = regex.exec(inputDate);

        if (match && match[1]) {
            const dateInMillis = parseInt(match[1], 10);
            const date = new Date(dateInMillis);

            const day = date.getDate();
            const month = date.getMonth() + 1; // Tháng trong JavaScript đếm từ 0, cộng thêm 1 để đúng định dạng
            const year = date.getFullYear();

            // Hàm padStart sẽ thêm số 0 vào trước nếu ngày hoặc tháng chỉ có một chữ số
            const formattedDay = String(day).padStart(2, '0');
            const formattedMonth = String(month).padStart(2, '0');

            // Xây dựng chuỗi ngày tháng năm mới theo định dạng "dd-MM-yyyy"
            const formattedDate = `${formattedDay}-${formattedMonth}-${year}`;

            return formattedDate;
        } else {
            console.error("Ngày không hợp lệ!");
            return null;
        }
    }


</script>


